"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@babel/runtime/helpers/extends"),t=require("react"),i=require("./Environment.cjs.js"),n=require("./ContactShadows.cjs.js"),r=require("./Center.cjs.js"),a=require("./AccumulativeShadows.cjs.js"),l=require("./Bounds.cjs.js");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function u(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var n=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,n.get?n:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}require("@react-three/fiber"),require("three"),require("three-stdlib"),require("../helpers/environment-assets.cjs.js"),require("./shaderMaterial.cjs.js");var o=s(e),c=u(t);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}};function m({radius:e,adjustCamera:t}){const i=l.useBounds();return c.useEffect((()=>{t&&i.refresh().clip().fit()}),[e,t]),null}exports.Stage=function({children:e,adjustCamera:t=!0,intensity:s=.5,shadows:u="contact",environment:f="city",preset:p="rembrandt",...h}){var v,b,j,g,y,E,w,q;const S="string"==typeof p?d[p]:p,[{radius:C,height:O},z]=c.useState({radius:0,width:0,height:0,depth:0}),B=null!==(v=null==u?void 0:u.bias)&&void 0!==v?v:-1e-4,L=null!==(b=null==u?void 0:u.normalBias)&&void 0!==b?b:0,M=null!==(j=null==u?void 0:u.size)&&void 0!==j?j:1024,_=null!==(g=null==u?void 0:u.offset)&&void 0!==g?g:0,x="contact"===u||"contact"===(null==u?void 0:u.type),P="accumulative"===u||"accumulative"===(null==u?void 0:u.type),A={..."object"==typeof u?u:{}},k=f?"string"==typeof f?{preset:f}:f:null;return c.createElement(c.Fragment,null,c.createElement("ambientLight",{intensity:s/3}),c.createElement("spotLight",{penumbra:1,position:[S.main[0]*C,S.main[1]*C,S.main[2]*C],intensity:2*s,castShadow:!!u,"shadow-bias":B,"shadow-normalBias":L,"shadow-mapSize":M}),c.createElement("pointLight",{position:[S.fill[0]*C,S.fill[1]*C,S.fill[2]*C],intensity:s}),c.createElement(l.Bounds,o.default({fit:!!t,clip:!!t,margin:Number(t),observe:!0},h),c.createElement(m,{radius:C,adjustCamera:t}),c.createElement(r.Center,{position:[0,_/2,0],onCentered:({width:e,height:t,depth:i,boundingSphere:n,...r})=>z({radius:n.radius,width:e,height:t,depth:i})},e)),c.createElement("group",{position:[0,-O/2-_/2,0]},x&&c.createElement(n.ContactShadows,o.default({scale:4*C,far:C,blur:2},A)),P&&c.createElement(a.AccumulativeShadows,o.default({temporal:!0,frames:100,alphaTest:.9,toneMapped:!0,scale:4*C},A),c.createElement(a.RandomizedLight,{amount:null!==(y=A.amount)&&void 0!==y?y:8,radius:null!==(E=A.radius)&&void 0!==E?E:C,ambient:null!==(w=A.ambient)&&void 0!==w?w:.5,intensity:null!==(q=A.intensity)&&void 0!==q?q:1,position:[S.main[0]*C,S.main[1]*C,S.main[2]*C],size:4*C,bias:-B,mapSize:M}))),f&&c.createElement(i.Environment,k))};
