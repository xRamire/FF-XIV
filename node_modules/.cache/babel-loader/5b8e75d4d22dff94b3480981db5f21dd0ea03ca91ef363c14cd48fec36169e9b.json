{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport fragShader from '../helpers/glsl/Sparkles.frag.glsl.js';\nimport vertShader from '../helpers/glsl/Sparkles.vert.glsl.js';\nconst SparklesMaterial = shaderMaterial({\n  time: 0,\n  pixelRatio: 1\n}, vertShader, fragShader);\nconst isFloat32Array = def => def && def.constructor === Float32Array;\nconst expandColor = v => [v.r, v.g, v.b];\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\nconst normalizeVector = v => {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(() => {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          const a = Array.from({\n            length: count * 3\n          }, () => expandColor(prop)).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          const a = Array.from({\n            length: count * 3\n          }, () => normalizeVector(prop)).flat();\n          return Float32Array.from(a);\n        }\n        return Float32Array.from({\n          length: count\n        }, () => prop);\n      }\n    }\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\nconst Sparkles = /*#__PURE__*/React.forwardRef((_ref, forwardRef) => {\n  let {\n    noise = 1,\n    count = 100,\n    speed = 1,\n    opacity = 1,\n    scale = 1,\n    size,\n    color,\n    ...props\n  } = _ref;\n  React.useMemo(() => extend({\n    SparklesMaterial\n  }), []);\n  const matRef = React.useRef();\n  const dpr = useThree(state => state.viewport.dpr);\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\n    length: count\n  }, () => normalizeVector(scale).map(THREE.MathUtils.randFloatSpread)).flat()), [count, scale]);\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\n  useFrame(state => matRef.current.uniforms.time.value = state.clock.elapsedTime);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: `particle-${count}-${JSON.stringify(scale)}`\n  }, props, {\n    ref: forwardRef\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), /*#__PURE__*/React.createElement(\"sparklesMaterial\", {\n    ref: matRef,\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\nexport { Sparkles };","map":{"version":3,"names":["_extends","React","THREE","extend","useThree","useFrame","shaderMaterial","fragShader","vertShader","SparklesMaterial","time","pixelRatio","isFloat32Array","def","constructor","Float32Array","expandColor","v","r","g","b","isVector","Vector2","Vector3","Vector4","normalizeVector","Array","isArray","toArray","usePropAsIsOrAsAttribute","count","prop","setDefault","useMemo","undefined","Color","a","from","length","flat","Sparkles","forwardRef","noise","speed","opacity","scale","size","color","props","matRef","useRef","dpr","state","viewport","positions","map","MathUtils","randFloatSpread","sizes","Math","random","opacities","speeds","noises","colors","current","uniforms","value","clock","elapsedTime","createElement","key","JSON","stringify","ref","attach","args","transparent","depthWrite"],"sources":["/Users/desarrollo/Desktop/free/node_modules/@react-three/drei/core/Sparkles.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport fragShader from '../helpers/glsl/Sparkles.frag.glsl.js';\nimport vertShader from '../helpers/glsl/Sparkles.vert.glsl.js';\n\nconst SparklesMaterial = shaderMaterial({\n  time: 0,\n  pixelRatio: 1\n}, vertShader, fragShader);\n\nconst isFloat32Array = def => def && def.constructor === Float32Array;\n\nconst expandColor = v => [v.r, v.g, v.b];\n\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\n\nconst normalizeVector = v => {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\n\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(() => {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          const a = Array.from({\n            length: count * 3\n          }, () => expandColor(prop)).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          const a = Array.from({\n            length: count * 3\n          }, () => normalizeVector(prop)).flat();\n          return Float32Array.from(a);\n        }\n\n        return Float32Array.from({\n          length: count\n        }, () => prop);\n      }\n    }\n\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\n\nconst Sparkles = /*#__PURE__*/React.forwardRef(({\n  noise = 1,\n  count = 100,\n  speed = 1,\n  opacity = 1,\n  scale = 1,\n  size,\n  color,\n  ...props\n}, forwardRef) => {\n  React.useMemo(() => extend({\n    SparklesMaterial\n  }), []);\n  const matRef = React.useRef();\n  const dpr = useThree(state => state.viewport.dpr);\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\n    length: count\n  }, () => normalizeVector(scale).map(THREE.MathUtils.randFloatSpread)).flat()), [count, scale]);\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\n  useFrame(state => matRef.current.uniforms.time.value = state.clock.elapsedTime);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: `particle-${count}-${JSON.stringify(scale)}`\n  }, props, {\n    ref: forwardRef\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), /*#__PURE__*/React.createElement(\"sparklesMaterial\", {\n    ref: matRef,\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\n\nexport { Sparkles };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}