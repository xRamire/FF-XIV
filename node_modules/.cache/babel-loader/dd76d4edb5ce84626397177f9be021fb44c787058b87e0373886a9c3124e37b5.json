{"ast":null,"code":"import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\nclass CubeTextureNode extends TextureNode {\n  constructor(value) {\n    let uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ReflectNode();\n    let biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super(value, uvNode, biasNode);\n  }\n  getInputType() {\n    return 'cubeTexture';\n  }\n  generate(builder, output) {\n    const texture = this.value;\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n        nodeData.snippet = snippet;\n      }\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n}\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":{"version":3,"names":["TextureNode","UniformNode","ReflectNode","CubeTextureNode","constructor","value","uvNode","biasNode","getInputType","generate","builder","output","texture","isCubeTexture","Error","textureProperty","prototype","call","isReference","nodeData","getDataFromNode","snippet","undefined","uvSnippet","build","biasSnippet","getCubeTextureBias","getCubeTexture","format","isCubeTextureNode"],"sources":["/Users/desarrollo/Desktop/free/node_modules/three-stdlib/nodes/accessors/CubeTextureNode.js"],"sourcesContent":["import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value, uvNode = new ReflectNode(), biasNode = null) {\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\n\nexport default CubeTextureNode;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,eAAe,SAASH,WAAW,CAAC;EACxCI,WAAW,CAACC,KAAK,EAA+C;IAAA,IAA7CC,MAAM,uEAAG,IAAIJ,WAAW,EAAE;IAAA,IAAEK,QAAQ,uEAAG,IAAI;IAC5D,KAAK,CAACF,KAAK,EAAEC,MAAM,EAAEC,QAAQ,CAAC;EAChC;EAEAC,YAAY,GAAG;IACb,OAAO,aAAa;EACtB;EAEAC,QAAQ,CAACC,OAAO,EAAEC,MAAM,EAAE;IACxB,MAAMC,OAAO,GAAG,IAAI,CAACP,KAAK;IAE1B,IAAI,CAACO,OAAO,IAAIA,OAAO,CAACC,aAAa,KAAK,IAAI,EAAE;MAC9C,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;IACnE;IAEA,MAAMC,eAAe,GAAGd,WAAW,CAACe,SAAS,CAACP,QAAQ,CAACQ,IAAI,CAAC,IAAI,EAAEP,OAAO,EAAE,aAAa,CAAC;IAEzF,IAAIC,MAAM,KAAK,SAAS,EAAE;MACxB,OAAOI,eAAe,GAAG,UAAU;IACrC,CAAC,MAAM,IAAIL,OAAO,CAACQ,WAAW,CAACP,MAAM,CAAC,EAAE;MACtC,OAAOI,eAAe;IACxB,CAAC,MAAM;MACL,MAAMI,QAAQ,GAAGT,OAAO,CAACU,eAAe,CAAC,IAAI,CAAC;MAC9C,IAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAO;MAE9B,IAAIA,OAAO,KAAKC,SAAS,EAAE;QACzB,MAAMC,SAAS,GAAG,IAAI,CAACjB,MAAM,CAACkB,KAAK,CAACd,OAAO,EAAE,MAAM,CAAC;QACpD,MAAMH,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACrB,MAAMkB,WAAW,GAAGlB,QAAQ,CAACiB,KAAK,CAACd,OAAO,EAAE,OAAO,CAAC;UACpDW,OAAO,GAAGX,OAAO,CAACgB,kBAAkB,CAACX,eAAe,EAAEQ,SAAS,EAAEE,WAAW,CAAC;QAC/E,CAAC,MAAM;UACLJ,OAAO,GAAGX,OAAO,CAACiB,cAAc,CAACZ,eAAe,EAAEQ,SAAS,CAAC;QAC9D;QAEAJ,QAAQ,CAACE,OAAO,GAAGA,OAAO;MAC5B;MAEA,OAAOX,OAAO,CAACkB,MAAM,CAACP,OAAO,EAAE,MAAM,EAAEV,MAAM,CAAC;IAChD;EACF;AAEF;AAEAR,eAAe,CAACa,SAAS,CAACa,iBAAiB,GAAG,IAAI;AAElD,eAAe1B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}