{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EarlyExitException = exports.NotAllInputParsedException = exports.NoViableAltException = exports.MismatchedTokenException = exports.isRecognitionException = void 0;\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [MISMATCHED_TOKEN_EXCEPTION, NO_VIABLE_ALT_EXCEPTION, EARLY_EXIT_EXCEPTION, NOT_ALL_INPUT_PARSED_EXCEPTION];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nfunction isRecognitionException(error) {\n  // can't do instanceof on hacked custom js exceptions\n  return (0, includes_1.default)(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nexports.isRecognitionException = isRecognitionException;\nvar RecognitionException = /** @class */function (_super) {\n  __extends(RecognitionException, _super);\n  function RecognitionException(message, token) {\n    var _newTarget = this.constructor;\n    var _this = _super.call(this, message) || this;\n    _this.token = token;\n    _this.resyncedTokens = [];\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, _this.constructor);\n    }\n    return _this;\n  }\n  return RecognitionException;\n}(Error);\nvar MismatchedTokenException = /** @class */function (_super) {\n  __extends(MismatchedTokenException, _super);\n  function MismatchedTokenException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = MISMATCHED_TOKEN_EXCEPTION;\n    return _this;\n  }\n  return MismatchedTokenException;\n}(RecognitionException);\nexports.MismatchedTokenException = MismatchedTokenException;\nvar NoViableAltException = /** @class */function (_super) {\n  __extends(NoViableAltException, _super);\n  function NoViableAltException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = NO_VIABLE_ALT_EXCEPTION;\n    return _this;\n  }\n  return NoViableAltException;\n}(RecognitionException);\nexports.NoViableAltException = NoViableAltException;\nvar NotAllInputParsedException = /** @class */function (_super) {\n  __extends(NotAllInputParsedException, _super);\n  function NotAllInputParsedException(message, token) {\n    var _this = _super.call(this, message, token) || this;\n    _this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    return _this;\n  }\n  return NotAllInputParsedException;\n}(RecognitionException);\nexports.NotAllInputParsedException = NotAllInputParsedException;\nvar EarlyExitException = /** @class */function (_super) {\n  __extends(EarlyExitException, _super);\n  function EarlyExitException(message, token, previousToken) {\n    var _this = _super.call(this, message, token) || this;\n    _this.previousToken = previousToken;\n    _this.name = EARLY_EXIT_EXCEPTION;\n    return _this;\n  }\n  return EarlyExitException;\n}(RecognitionException);\nexports.EarlyExitException = EarlyExitException;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA,IAAMA,0BAA0B,GAAG,0BAA0B;AAC7D,IAAMC,uBAAuB,GAAG,sBAAsB;AACtD,IAAMC,oBAAoB,GAAG,oBAAoB;AACjD,IAAMC,8BAA8B,GAAG,4BAA4B;AAEnE,IAAMC,2BAA2B,GAAG,CAClCJ,0BAA0B,EAC1BC,uBAAuB,EACvBC,oBAAoB,EACpBC,8BAA8B,CAC/B;AAEDE,MAAM,CAACC,MAAM,CAACF,2BAA2B,CAAC;AAE1C;AACA,SAAgBG,sBAAsB,CAACC,KAAY;EACjD;EACA,OAAO,sBAAQ,EAACJ,2BAA2B,EAAEI,KAAK,CAACC,IAAI,CAAC;AAC1D;AAHAC;AAKA;EACUC;EAMR,8BAAsBC,OAAe,EAASC,KAAa;;IAA3D,YACEC,kBAAMF,OAAO,CAAC;IAD8BG,WAAK,GAALF,KAAK;IAFnDE,oBAAc,GAAa,EAAE;IAK3B;IACAV,MAAM,CAACW,cAAc,CAACD,KAAI,EAAEE,WAAWC,SAAS,CAAC;IAEjD;IACA,IAAIC,KAAK,CAACC,iBAAiB,EAAE;MAC3BD,KAAK,CAACC,iBAAiB,CAACL,KAAI,EAAEA,KAAI,CAACM,WAAW,CAAC;;;EAEnD;EACF,2BAAC;AAAD,CAAC,CAjBSF,KAAK;AAmBf;EAA8CR;EAC5C,kCAAYC,OAAe,EAAEC,KAAa,EAASS,aAAqB;IAAxE,YACER,kBAAMF,OAAO,EAAEC,KAAK,CAAC;IAD4BE,mBAAa,GAAbO,aAAa;IAE9DP,KAAI,CAACN,IAAI,GAAGT,0BAA0B;;EACxC;EACF,+BAAC;AAAD,CAAC,CAL6CuB,oBAAoB;AAArDb;AAOb;EAA0CC;EACxC,8BAAYC,OAAe,EAAEC,KAAa,EAASS,aAAqB;IAAxE,YACER,kBAAMF,OAAO,EAAEC,KAAK,CAAC;IAD4BE,mBAAa,GAAbO,aAAa;IAE9DP,KAAI,CAACN,IAAI,GAAGR,uBAAuB;;EACrC;EACF,2BAAC;AAAD,CAAC,CALyCsB,oBAAoB;AAAjDb;AAOb;EAAgDC;EAC9C,oCAAYC,OAAe,EAAEC,KAAa;IAA1C,YACEC,kBAAMF,OAAO,EAAEC,KAAK,CAAC;IACrBE,KAAI,CAACN,IAAI,GAAGN,8BAA8B;;EAC5C;EACF,iCAAC;AAAD,CAAC,CAL+CoB,oBAAoB;AAAvDb;AAOb;EAAwCC;EACtC,4BAAYC,OAAe,EAAEC,KAAa,EAASS,aAAqB;IAAxE,YACER,kBAAMF,OAAO,EAAEC,KAAK,CAAC;IAD4BE,mBAAa,GAAbO,aAAa;IAE9DP,KAAI,CAACN,IAAI,GAAGP,oBAAoB;;EAClC;EACF,yBAAC;AAAD,CAAC,CALuCqB,oBAAoB;AAA/Cb","names":["MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","Object","freeze","isRecognitionException","error","name","exports","__extends","message","token","_super","_this","setPrototypeOf","_newTarget","prototype","Error","captureStackTrace","constructor","previousToken","RecognitionException"],"sources":["/Users/desarrollo/Desktop/free/node_modules/chevrotain/src/parse/exceptions_public.ts"],"sourcesContent":["import includes from \"lodash/includes\"\nimport {\n  IToken,\n  IRecognitionException,\n  IRecognizerContext\n} from \"@chevrotain/types\"\n\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\"\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\"\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\"\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\"\n\nconst RECOGNITION_EXCEPTION_NAMES = [\n  MISMATCHED_TOKEN_EXCEPTION,\n  NO_VIABLE_ALT_EXCEPTION,\n  EARLY_EXIT_EXCEPTION,\n  NOT_ALL_INPUT_PARSED_EXCEPTION\n]\n\nObject.freeze(RECOGNITION_EXCEPTION_NAMES)\n\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error: Error) {\n  // can't do instanceof on hacked custom js exceptions\n  return includes(RECOGNITION_EXCEPTION_NAMES, error.name)\n}\n\nabstract class RecognitionException\n  extends Error\n  implements IRecognitionException\n{\n  context: IRecognizerContext\n  resyncedTokens: IToken[] = []\n\n  protected constructor(message: string, public token: IToken) {\n    super(message)\n\n    // fix prototype chain when typescript target is ES5\n    Object.setPrototypeOf(this, new.target.prototype)\n\n    /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n\nexport class MismatchedTokenException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = MISMATCHED_TOKEN_EXCEPTION\n  }\n}\n\nexport class NoViableAltException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = NO_VIABLE_ALT_EXCEPTION\n  }\n}\n\nexport class NotAllInputParsedException extends RecognitionException {\n  constructor(message: string, token: IToken) {\n    super(message, token)\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION\n  }\n}\n\nexport class EarlyExitException extends RecognitionException {\n  constructor(message: string, token: IToken, public previousToken: IToken) {\n    super(message, token)\n    this.name = EARLY_EXIT_EXCEPTION\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}