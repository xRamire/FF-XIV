{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\nconst isFunction = node => typeof node === 'function';\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    envMap,\n    resolution = 256,\n    frames = Infinity,\n    makeDefault,\n    children,\n    ...props\n  } = _ref;\n  const set = useThree(_ref2 => {\n    let {\n      set\n    } = _ref2;\n    return set;\n  });\n  const camera = useThree(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    return camera;\n  });\n  const size = useThree(_ref4 => {\n    let {\n      size\n    } = _ref4;\n    return size;\n  });\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\nexport { PerspectiveCamera };","map":{"version":3,"names":["_extends","React","useThree","useFrame","mergeRefs","useFBO","isFunction","node","PerspectiveCamera","forwardRef","ref","envMap","resolution","frames","Infinity","makeDefault","children","props","set","camera","size","cameraRef","useRef","groupRef","fbo","useLayoutEffect","manual","current","aspect","width","height","updateProjectionMatrix","count","oldEnvMap","functional","state","visible","gl","setRenderTarget","scene","background","render","oldCam","createElement","Fragment","texture"],"sources":["/Users/desarrollo/Desktop/free/node_modules/@react-three/drei/core/PerspectiveCamera.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { PerspectiveCamera };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}