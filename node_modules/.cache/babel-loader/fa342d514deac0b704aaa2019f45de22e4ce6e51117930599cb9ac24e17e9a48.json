{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function (token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\".concat(token.image, \"<- The Mode Stack is empty\");\n  },\n  buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\".concat(fullText.charAt(startOffset), \"<- at offset: \").concat(startOffset, \",\") + \" skipped \".concat(length, \" characters.\");\n  }\n};","map":{"version":3,"mappings":";;;;;;AAEaA,iCAAyB,GAA+B;EACnEC,gCAAgC,EAAhC,UAAiCC,KAAa;IAC5C,OAAO,8DAAuDA,KAAK,CAACC,KAAK,+BAA4B;EACvG,CAAC;EAEDC,gCAAgC,EAAhC,UACEC,QAAgB,EAChBC,WAAmB,EACnBC,MAAc,EACdC,IAAa,EACbC,MAAe;IAEf,OACE,kCAA2BJ,QAAQ,CAACK,MAAM,CACxCJ,WAAW,CACZ,2BAAiBA,WAAW,MAAG,GAAG,mBAAYC,MAAM,iBAAc;EAEvE;CACD","names":["exports","buildUnableToPopLexerModeMessage","token","image","buildUnexpectedCharactersMessage","fullText","startOffset","length","line","column","charAt"],"sources":["/Users/desarrollo/Desktop/free/node_modules/chevrotain/src/scan/lexer_errors_public.ts"],"sourcesContent":["import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}