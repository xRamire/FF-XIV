{"ast":null,"code":"\"use strict\";\n\n/* istanbul ignore file - tricky to import some things from this module during testing */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.createSyntaxDiagramsCode = exports.clearCache = exports.generateCstDts = exports.GAstVisitor = exports.serializeProduction = exports.serializeGrammar = exports.Terminal = exports.Rule = exports.RepetitionWithSeparator = exports.RepetitionMandatoryWithSeparator = exports.RepetitionMandatory = exports.Repetition = exports.Option = exports.NonTerminal = exports.Alternative = exports.Alternation = exports.defaultLexerErrorProvider = exports.NoViableAltException = exports.NotAllInputParsedException = exports.MismatchedTokenException = exports.isRecognitionException = exports.EarlyExitException = exports.defaultParserErrorProvider = exports.LLkLookaheadStrategy = exports.getLookaheadPaths = exports.tokenName = exports.tokenMatcher = exports.tokenLabel = exports.EOF = exports.createTokenInstance = exports.createToken = exports.LexerDefinitionErrorType = exports.Lexer = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.EmbeddedActionsParser = exports.CstParser = exports.VERSION = void 0;\n// semantic version\nvar version_1 = require(\"./version\");\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function () {\n    return version_1.VERSION;\n  }\n});\nvar parser_1 = require(\"./parse/parser/parser\");\nObject.defineProperty(exports, \"CstParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.CstParser;\n  }\n});\nObject.defineProperty(exports, \"EmbeddedActionsParser\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EmbeddedActionsParser;\n  }\n});\nObject.defineProperty(exports, \"ParserDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.ParserDefinitionErrorType;\n  }\n});\nObject.defineProperty(exports, \"EMPTY_ALT\", {\n  enumerable: true,\n  get: function () {\n    return parser_1.EMPTY_ALT;\n  }\n});\nvar lexer_public_1 = require(\"./scan/lexer_public\");\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.Lexer;\n  }\n});\nObject.defineProperty(exports, \"LexerDefinitionErrorType\", {\n  enumerable: true,\n  get: function () {\n    return lexer_public_1.LexerDefinitionErrorType;\n  }\n});\n// Tokens utilities\nvar tokens_public_1 = require(\"./scan/tokens_public\");\nObject.defineProperty(exports, \"createToken\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createToken;\n  }\n});\nObject.defineProperty(exports, \"createTokenInstance\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.createTokenInstance;\n  }\n});\nObject.defineProperty(exports, \"EOF\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.EOF;\n  }\n});\nObject.defineProperty(exports, \"tokenLabel\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenLabel;\n  }\n});\nObject.defineProperty(exports, \"tokenMatcher\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenMatcher;\n  }\n});\nObject.defineProperty(exports, \"tokenName\", {\n  enumerable: true,\n  get: function () {\n    return tokens_public_1.tokenName;\n  }\n});\n// Lookahead\nvar lookahead_1 = require(\"./parse/grammar/lookahead\");\nObject.defineProperty(exports, \"getLookaheadPaths\", {\n  enumerable: true,\n  get: function () {\n    return lookahead_1.getLookaheadPaths;\n  }\n});\nvar llk_lookahead_1 = require(\"./parse/grammar/llk_lookahead\");\nObject.defineProperty(exports, \"LLkLookaheadStrategy\", {\n  enumerable: true,\n  get: function () {\n    return llk_lookahead_1.LLkLookaheadStrategy;\n  }\n});\n// Other Utilities\nvar errors_public_1 = require(\"./parse/errors_public\");\nObject.defineProperty(exports, \"defaultParserErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return errors_public_1.defaultParserErrorProvider;\n  }\n});\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\nObject.defineProperty(exports, \"EarlyExitException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.EarlyExitException;\n  }\n});\nObject.defineProperty(exports, \"isRecognitionException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.isRecognitionException;\n  }\n});\nObject.defineProperty(exports, \"MismatchedTokenException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.MismatchedTokenException;\n  }\n});\nObject.defineProperty(exports, \"NotAllInputParsedException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NotAllInputParsedException;\n  }\n});\nObject.defineProperty(exports, \"NoViableAltException\", {\n  enumerable: true,\n  get: function () {\n    return exceptions_public_1.NoViableAltException;\n  }\n});\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\nObject.defineProperty(exports, \"defaultLexerErrorProvider\", {\n  enumerable: true,\n  get: function () {\n    return lexer_errors_public_1.defaultLexerErrorProvider;\n  }\n});\n// grammar reflection API\nvar gast_1 = require(\"@chevrotain/gast\");\nObject.defineProperty(exports, \"Alternation\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Alternation;\n  }\n});\nObject.defineProperty(exports, \"Alternative\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Alternative;\n  }\n});\nObject.defineProperty(exports, \"NonTerminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.NonTerminal;\n  }\n});\nObject.defineProperty(exports, \"Option\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Option;\n  }\n});\nObject.defineProperty(exports, \"Repetition\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Repetition;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatory\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.RepetitionMandatory;\n  }\n});\nObject.defineProperty(exports, \"RepetitionMandatoryWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.RepetitionMandatoryWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"RepetitionWithSeparator\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.RepetitionWithSeparator;\n  }\n});\nObject.defineProperty(exports, \"Rule\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Rule;\n  }\n});\nObject.defineProperty(exports, \"Terminal\", {\n  enumerable: true,\n  get: function () {\n    return gast_1.Terminal;\n  }\n});\n// GAST Utilities\nvar gast_2 = require(\"@chevrotain/gast\");\nObject.defineProperty(exports, \"serializeGrammar\", {\n  enumerable: true,\n  get: function () {\n    return gast_2.serializeGrammar;\n  }\n});\nObject.defineProperty(exports, \"serializeProduction\", {\n  enumerable: true,\n  get: function () {\n    return gast_2.serializeProduction;\n  }\n});\nObject.defineProperty(exports, \"GAstVisitor\", {\n  enumerable: true,\n  get: function () {\n    return gast_2.GAstVisitor;\n  }\n});\nvar cst_dts_gen_1 = require(\"@chevrotain/cst-dts-gen\");\nObject.defineProperty(exports, \"generateCstDts\", {\n  enumerable: true,\n  get: function () {\n    return cst_dts_gen_1.generateCstDts;\n  }\n});\n/* istanbul ignore next */\nfunction clearCache() {\n  console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" + \"\\n\\t It performs no action other than printing this message.\" + \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexports.clearCache = clearCache;\nvar render_public_1 = require(\"./diagrams/render_public\");\nObject.defineProperty(exports, \"createSyntaxDiagramsCode\", {\n  enumerable: true,\n  get: function () {\n    return render_public_1.createSyntaxDiagramsCode;\n  }\n});\nvar Parser = /** @class */function () {\n  function Parser() {\n    throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" + \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n  }\n  return Parser;\n}();\nexports.Parser = Parser;","map":{"version":3,"mappings":";;AAAA;;;;;AAEA;AACA;AAASA;EAAAC;EAAAC;IAAA,wBAAO;EAAA;AAAA;AAEhB;AACEF;EAAAC;EAAAC;IAAA,yBAAS;EAAA;AAAA;AACTF;EAAAC;EAAAC;IAAA,qCAAqB;EAAA;AAAA;AACrBF;EAAAC;EAAAC;IAAA,yCAAyB;EAAA;AAAA;AACzBF;EAAAC;EAAAC;IAAA,yBAAS;EAAA;AAAA;AAGX;AAASF;EAAAC;EAAAC;IAAA,2BAAK;EAAA;AAAA;AAAEF;EAAAC;EAAAC;IAAA,8CAAwB;EAAA;AAAA;AAExC;AACA;AACEF;EAAAC;EAAAC;IAAA,kCAAW;EAAA;AAAA;AACXF;EAAAC;EAAAC;IAAA,0CAAmB;EAAA;AAAA;AACnBF;EAAAC;EAAAC;IAAA,0BAAG;EAAA;AAAA;AACHF;EAAAC;EAAAC;IAAA,iCAAU;EAAA;AAAA;AACVF;EAAAC;EAAAC;IAAA,mCAAY;EAAA;AAAA;AACZF;EAAAC;EAAAC;IAAA,gCAAS;EAAA;AAAA;AAGX;AAEA;AAASF;EAAAC;EAAAC;IAAA,oCAAiB;EAAA;AAAA;AAE1B;AAASF;EAAAC;EAAAC;IAAA,2CAAoB;EAAA;AAAA;AAE7B;AAEA;AAASF;EAAAC;EAAAC;IAAA,iDAA0B;EAAA;AAAA;AAEnC;AACEF;EAAAC;EAAAC;IAAA,6CAAkB;EAAA;AAAA;AAClBF;EAAAC;EAAAC;IAAA,iDAAsB;EAAA;AAAA;AACtBF;EAAAC;EAAAC;IAAA,mDAAwB;EAAA;AAAA;AACxBF;EAAAC;EAAAC;IAAA,qDAA0B;EAAA;AAAA;AAC1BF;EAAAC;EAAAC;IAAA,+CAAoB;EAAA;AAAA;AAGtB;AAASF;EAAAC;EAAAC;IAAA,sDAAyB;EAAA;AAAA;AAElC;AACA;AACEF;EAAAC;EAAAC;IAAA,yBAAW;EAAA;AAAA;AACXF;EAAAC;EAAAC;IAAA,yBAAW;EAAA;AAAA;AACXF;EAAAC;EAAAC;IAAA,yBAAW;EAAA;AAAA;AACXF;EAAAC;EAAAC;IAAA,oBAAM;EAAA;AAAA;AACNF;EAAAC;EAAAC;IAAA,wBAAU;EAAA;AAAA;AACVF;EAAAC;EAAAC;IAAA,iCAAmB;EAAA;AAAA;AACnBF;EAAAC;EAAAC;IAAA,8CAAgC;EAAA;AAAA;AAChCF;EAAAC;EAAAC;IAAA,qCAAuB;EAAA;AAAA;AACvBF;EAAAC;EAAAC;IAAA,kBAAI;EAAA;AAAA;AACJF;EAAAC;EAAAC;IAAA,sBAAQ;EAAA;AAAA;AAGV;AAEA;AACEF;EAAAC;EAAAC;IAAA,8BAAgB;EAAA;AAAA;AAChBF;EAAAC;EAAAC;IAAA,iCAAmB;EAAA;AAAA;AACnBF;EAAAC;EAAAC;IAAA,yBAAW;EAAA;AAAA;AAGb;AAASF;EAAAC;EAAAC;IAAA,mCAAc;EAAA;AAAA;AAEvB;AACA,SAAgBC,UAAU;EACxBC,OAAO,CAACC,IAAI,CACV,qEAAqE,GACnE,8DAA8D,GAC9D,2EAA2E,CAC9E;AACH;AANAC;AAQA;AAASN;EAAAC;EAAAC;IAAA,+CAAwB;EAAA;AAAA;AAEjC;EACE;IACE,MAAM,IAAIK,KAAK,CACb,2FAA2F,GACzF,sEAAsE,CACzE;EACH;EACF,aAAC;AAAD,CAAC,EAPD;AAAaD","names":["Object","enumerable","get","clearCache","console","warn","exports","Error"],"sources":["/Users/desarrollo/Desktop/free/node_modules/chevrotain/src/api.ts"],"sourcesContent":["/* istanbul ignore file - tricky to import some things from this module during testing */\n\n// semantic version\nexport { VERSION } from \"./version\"\n\nexport {\n  CstParser,\n  EmbeddedActionsParser,\n  ParserDefinitionErrorType,\n  EMPTY_ALT\n} from \"./parse/parser/parser\"\n\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"\n\n// Tokens utilities\nexport {\n  createToken,\n  createTokenInstance,\n  EOF,\n  tokenLabel,\n  tokenMatcher,\n  tokenName\n} from \"./scan/tokens_public\"\n\n// Lookahead\n\nexport { getLookaheadPaths } from \"./parse/grammar/lookahead\"\n\nexport { LLkLookaheadStrategy } from \"./parse/grammar/llk_lookahead\"\n\n// Other Utilities\n\nexport { defaultParserErrorProvider } from \"./parse/errors_public\"\n\nexport {\n  EarlyExitException,\n  isRecognitionException,\n  MismatchedTokenException,\n  NotAllInputParsedException,\n  NoViableAltException\n} from \"./parse/exceptions_public\"\n\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"\n\n// grammar reflection API\nexport {\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"@chevrotain/gast\"\n\n// GAST Utilities\n\nexport {\n  serializeGrammar,\n  serializeProduction,\n  GAstVisitor\n} from \"@chevrotain/gast\"\n\nexport { generateCstDts } from \"@chevrotain/cst-dts-gen\"\n\n/* istanbul ignore next */\nexport function clearCache() {\n  console.warn(\n    \"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n      \"\\n\\t It performs no action other than printing this message.\" +\n      \"\\n\\t Please avoid using it as it will be completely removed in the future\"\n  )\n}\n\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\"\n\nexport class Parser {\n  constructor() {\n    throw new Error(\n      \"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" +\n        \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\"\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}