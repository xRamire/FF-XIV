{"ast":null,"code":"import TempNode from './TempNode.js';\nclass ExpressionNode extends TempNode {\n  constructor() {\n    let snipped = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'void';\n    super(nodeType);\n    this.snipped = snipped;\n  }\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n}\nexport default ExpressionNode;","map":{"version":3,"names":["TempNode","ExpressionNode","constructor","snipped","nodeType","generate","builder","type","getNodeType","addFlowCode"],"sources":["/Users/desarrollo/Desktop/free/node_modules/three-stdlib/nodes/core/ExpressionNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n  constructor(snipped = '', nodeType = 'void') {\n    super(nodeType);\n    this.snipped = snipped;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n\n}\n\nexport default ExpressionNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AAEpC,MAAMC,cAAc,SAASD,QAAQ,CAAC;EACpCE,WAAW,GAAkC;IAAA,IAAjCC,OAAO,uEAAG,EAAE;IAAA,IAAEC,QAAQ,uEAAG,MAAM;IACzC,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAEAE,QAAQ,CAACC,OAAO,EAAE;IAChB,MAAMC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,OAAO,CAAC;IACtC,MAAMH,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5B,IAAII,IAAI,KAAK,MAAM,EAAE;MACnBD,OAAO,CAACG,WAAW,CAACN,OAAO,CAAC;IAC9B,CAAC,MAAM;MACL,OAAQ,KAAIA,OAAQ,IAAG;IACzB;EACF;AAEF;AAEA,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}