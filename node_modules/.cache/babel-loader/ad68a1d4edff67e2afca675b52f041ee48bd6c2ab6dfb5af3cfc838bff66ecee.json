{"ast":null,"code":"import TempNode from './TempNode.js';\nclass FunctionCallNode extends TempNode {\n  constructor() {\n    let functionNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this.functionNode = functionNode;\n    this.parameters = parameters;\n  }\n  setParameters(parameters) {\n    this.parameters = parameters;\n    return this;\n  }\n  getParameters() {\n    return this.parameters;\n  }\n  getNodeType(builder) {\n    return this.functionNode.getNodeType(builder);\n  }\n  generate(builder) {\n    const params = [];\n    const functionNode = this.functionNode;\n    const inputs = functionNode.getInputs(builder);\n    const parameters = this.parameters;\n    for (const inputNode of inputs) {\n      const node = parameters[inputNode.name];\n      if (node !== undefined) {\n        params.push(node.build(builder, inputNode.type));\n      } else {\n        throw new Error(`FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.`);\n      }\n    }\n    const functionName = functionNode.build(builder, 'property');\n    return `${functionName}( ${params.join(', ')} )`;\n  }\n}\nexport default FunctionCallNode;","map":{"version":3,"names":["TempNode","FunctionCallNode","constructor","functionNode","parameters","setParameters","getParameters","getNodeType","builder","generate","params","inputs","getInputs","inputNode","node","name","undefined","push","build","type","Error","functionName","join"],"sources":["/Users/desarrollo/Desktop/free/node_modules/three-stdlib/nodes/core/FunctionCallNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass FunctionCallNode extends TempNode {\n  constructor(functionNode = null, parameters = {}) {\n    super();\n    this.functionNode = functionNode;\n    this.parameters = parameters;\n  }\n\n  setParameters(parameters) {\n    this.parameters = parameters;\n    return this;\n  }\n\n  getParameters() {\n    return this.parameters;\n  }\n\n  getNodeType(builder) {\n    return this.functionNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const params = [];\n    const functionNode = this.functionNode;\n    const inputs = functionNode.getInputs(builder);\n    const parameters = this.parameters;\n\n    for (const inputNode of inputs) {\n      const node = parameters[inputNode.name];\n\n      if (node !== undefined) {\n        params.push(node.build(builder, inputNode.type));\n      } else {\n        throw new Error(`FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.`);\n      }\n    }\n\n    const functionName = functionNode.build(builder, 'property');\n    return `${functionName}( ${params.join(', ')} )`;\n  }\n\n}\n\nexport default FunctionCallNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AAEpC,MAAMC,gBAAgB,SAASD,QAAQ,CAAC;EACtCE,WAAW,GAAuC;IAAA,IAAtCC,YAAY,uEAAG,IAAI;IAAA,IAAEC,UAAU,uEAAG,CAAC,CAAC;IAC9C,KAAK,EAAE;IACP,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC9B;EAEAC,aAAa,CAACD,UAAU,EAAE;IACxB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,OAAO,IAAI;EACb;EAEAE,aAAa,GAAG;IACd,OAAO,IAAI,CAACF,UAAU;EACxB;EAEAG,WAAW,CAACC,OAAO,EAAE;IACnB,OAAO,IAAI,CAACL,YAAY,CAACI,WAAW,CAACC,OAAO,CAAC;EAC/C;EAEAC,QAAQ,CAACD,OAAO,EAAE;IAChB,MAAME,MAAM,GAAG,EAAE;IACjB,MAAMP,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMQ,MAAM,GAAGR,YAAY,CAACS,SAAS,CAACJ,OAAO,CAAC;IAC9C,MAAMJ,UAAU,GAAG,IAAI,CAACA,UAAU;IAElC,KAAK,MAAMS,SAAS,IAAIF,MAAM,EAAE;MAC9B,MAAMG,IAAI,GAAGV,UAAU,CAACS,SAAS,CAACE,IAAI,CAAC;MAEvC,IAAID,IAAI,KAAKE,SAAS,EAAE;QACtBN,MAAM,CAACO,IAAI,CAACH,IAAI,CAACI,KAAK,CAACV,OAAO,EAAEK,SAAS,CAACM,IAAI,CAAC,CAAC;MAClD,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAE,4BAA2BP,SAAS,CAACE,IAAK,8BAA6B,CAAC;MAC3F;IACF;IAEA,MAAMM,YAAY,GAAGlB,YAAY,CAACe,KAAK,CAACV,OAAO,EAAE,UAAU,CAAC;IAC5D,OAAQ,GAAEa,YAAa,KAAIX,MAAM,CAACY,IAAI,CAAC,IAAI,CAAE,IAAG;EAClD;AAEF;AAEA,eAAerB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}