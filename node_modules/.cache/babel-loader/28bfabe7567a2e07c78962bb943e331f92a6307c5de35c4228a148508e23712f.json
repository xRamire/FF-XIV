{"ast":null,"code":"import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nclass ReferenceNode extends Node {\n  constructor(property, uniformType) {\n    let object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n  getNodeType() {\n    return this.uniformType;\n  }\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n}\nexport default ReferenceNode;","map":{"version":3,"names":["Node","UniformNode","NodeUpdateType","ReferenceNode","constructor","property","uniformType","object","node","updateType","Object","setNodeType","nodeType","getNodeType","update","frame","value","generate","builder","build"],"sources":["/Users/desarrollo/Desktop/free/node_modules/three-stdlib/nodes/accessors/ReferenceNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n  constructor(property, uniformType, object = null) {\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n\n  getNodeType() {\n    return this.uniformType;\n  }\n\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default ReferenceNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AAErD,MAAMC,aAAa,SAASH,IAAI,CAAC;EAC/BI,WAAW,CAACC,QAAQ,EAAEC,WAAW,EAAiB;IAAA,IAAfC,MAAM,uEAAG,IAAI;IAC9C,KAAK,EAAE;IACP,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,UAAU,GAAGP,cAAc,CAACQ,MAAM;IACvC,IAAI,CAACC,WAAW,CAACL,WAAW,CAAC;EAC/B;EAEAK,WAAW,CAACL,WAAW,EAAE;IACvB,IAAI,CAACE,IAAI,GAAG,IAAIP,WAAW,CAAC,IAAI,EAAEK,WAAW,CAAC;IAC9C,IAAI,CAACM,QAAQ,GAAGN,WAAW;IAE3B,IAAIA,WAAW,KAAK,OAAO,EAAE;MAC3B,IAAI,CAACM,QAAQ,GAAG,MAAM;IACxB,CAAC,MAAM,IAAIN,WAAW,KAAK,SAAS,EAAE;MACpC,IAAI,CAACM,QAAQ,GAAG,MAAM;IACxB;EACF;EAEAC,WAAW,GAAG;IACZ,OAAO,IAAI,CAACP,WAAW;EACzB;EAEAQ,MAAM,CAACC,KAAK,EAAE;IACZ,MAAMR,MAAM,GAAG,IAAI,CAACA,MAAM,KAAK,IAAI,GAAG,IAAI,CAACA,MAAM,GAAGQ,KAAK,CAACR,MAAM;IAChE,MAAMS,KAAK,GAAGT,MAAM,CAAC,IAAI,CAACF,QAAQ,CAAC;IACnC,IAAI,CAACG,IAAI,CAACQ,KAAK,GAAGA,KAAK;EACzB;EAEAC,QAAQ,CAACC,OAAO,EAAE;IAChB,OAAO,IAAI,CAACV,IAAI,CAACW,KAAK,CAACD,OAAO,EAAE,IAAI,CAACL,WAAW,CAACK,OAAO,CAAC,CAAC;EAC5D;AAEF;AAEA,eAAef,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}