{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nclass TimerNode extends UniformNode {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TimerNode.LOCAL;\n    super(0);\n    this.scope = scope;\n    this.scale = 1;\n    this.updateType = NodeUpdateType.Frame;\n  }\n  update(frame) {\n    const scope = this.scope;\n    const scale = this.scale;\n    if (scope === TimerNode.LOCAL) {\n      this.value += frame.deltaTime * scale;\n    } else if (scope === TimerNode.DELTA) {\n      this.value = frame.deltaTime * scale;\n    } else {\n      // global\n      this.value = frame.time * scale;\n    }\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n    data.scale = this.scale;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n    this.scale = data.scale;\n  }\n}\n_defineProperty(TimerNode, \"LOCAL\", 'local');\n_defineProperty(TimerNode, \"GLOBAL\", 'global');\n_defineProperty(TimerNode, \"DELTA\", 'delta');\nexport default TimerNode;","map":{"version":3,"names":["_defineProperty","UniformNode","NodeUpdateType","TimerNode","constructor","scope","LOCAL","scale","updateType","Frame","update","frame","value","deltaTime","DELTA","time","serialize","data","deserialize"],"sources":["/Users/desarrollo/Desktop/free/node_modules/three-stdlib/nodes/utils/TimerNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass TimerNode extends UniformNode {\n  constructor(scope = TimerNode.LOCAL) {\n    super(0);\n    this.scope = scope;\n    this.scale = 1;\n    this.updateType = NodeUpdateType.Frame;\n  }\n\n  update(frame) {\n    const scope = this.scope;\n    const scale = this.scale;\n\n    if (scope === TimerNode.LOCAL) {\n      this.value += frame.deltaTime * scale;\n    } else if (scope === TimerNode.DELTA) {\n      this.value = frame.deltaTime * scale;\n    } else {\n      // global\n      this.value = frame.time * scale;\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n    data.scale = this.scale;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n    this.scale = data.scale;\n  }\n\n}\n\n_defineProperty(TimerNode, \"LOCAL\", 'local');\n\n_defineProperty(TimerNode, \"GLOBAL\", 'global');\n\n_defineProperty(TimerNode, \"DELTA\", 'delta');\n\nexport default TimerNode;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AAErD,MAAMC,SAAS,SAASF,WAAW,CAAC;EAClCG,WAAW,GAA0B;IAAA,IAAzBC,KAAK,uEAAGF,SAAS,CAACG,KAAK;IACjC,KAAK,CAAC,CAAC,CAAC;IACR,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,UAAU,GAAGN,cAAc,CAACO,KAAK;EACxC;EAEAC,MAAM,CAACC,KAAK,EAAE;IACZ,MAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAME,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIF,KAAK,KAAKF,SAAS,CAACG,KAAK,EAAE;MAC7B,IAAI,CAACM,KAAK,IAAID,KAAK,CAACE,SAAS,GAAGN,KAAK;IACvC,CAAC,MAAM,IAAIF,KAAK,KAAKF,SAAS,CAACW,KAAK,EAAE;MACpC,IAAI,CAACF,KAAK,GAAGD,KAAK,CAACE,SAAS,GAAGN,KAAK;IACtC,CAAC,MAAM;MACL;MACA,IAAI,CAACK,KAAK,GAAGD,KAAK,CAACI,IAAI,GAAGR,KAAK;IACjC;EACF;EAEAS,SAAS,CAACC,IAAI,EAAE;IACd,KAAK,CAACD,SAAS,CAACC,IAAI,CAAC;IACrBA,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK;IACvBY,IAAI,CAACV,KAAK,GAAG,IAAI,CAACA,KAAK;EACzB;EAEAW,WAAW,CAACD,IAAI,EAAE;IAChB,KAAK,CAACC,WAAW,CAACD,IAAI,CAAC;IACvB,IAAI,CAACZ,KAAK,GAAGY,IAAI,CAACZ,KAAK;IACvB,IAAI,CAACE,KAAK,GAAGU,IAAI,CAACV,KAAK;EACzB;AAEF;AAEAP,eAAe,CAACG,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC;AAE5CH,eAAe,CAACG,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAE9CH,eAAe,CAACG,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC;AAE5C,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}